---
- name: Ensure CA
  hosts: ca

  vars:
    ca_dir: /opt/syslog_ca

  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      changed_when: false
      when: ansible_os_family == 'Debian'

  roles:
    - role: ca

- name: Client | Create client csr
  hosts: [syslog_server, syslog_client]
  vars:
    syslog_dir: /etc/syslog-ng
    syslog_ca_dir: "{{ syslog_dir }}/ca.d/"
    syslog_cert_dir: "{{ syslog_dir }}/cert.d/"
    syslog_key_dir: "{{ syslog_dir }}/key.d/"
    local_ca_cert_dir: /tmp/ca_dir
    ca:
      country: RU
      province: MSK
      city: Moscow
      org: BIG
      ou: DevOps
      email: admin@localhost
  tasks:
    - name: "Client {{ ansible_default_ipv4.address }} | Install python requirements"
      apt:
        name: python3-pip

    - name: "Client {{ ansible_default_ipv4.address }} | Install openssl requirements"
      pip:
        name: cryptography>=1.3

    - name: "Client {{ ansible_default_ipv4.address }} | Ensure csr dir"
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ syslog_cert_dir }}"
        - "{{ syslog_key_dir }}"

    - name: "Client {{ ansible_default_ipv4.address }} | Create private key"
      openssl_privatekey:
        backup: yes
        mode: 0600
        owner: root
        path: "{{ syslog_key_dir }}/{{ ansible_default_ipv4.address }}.pem"

    - name: Client {{ ansible_default_ipv4.address }} | Create csr
      openssl_csr:
        path: "{{ syslog_cert_dir }}/{{ ansible_default_ipv4.address }}.csr"
        privatekey_path: "{{ syslog_key_dir }}/{{ ansible_default_ipv4.address }}.pem"
        common_name: "{{ ansible_default_ipv4.address }}"
        country_name: "{{ ca.country }}"
        organization_name: "{{ ca.org }}"
        organizational_unit_name: "{{ ca.ou }}"
        email_address: "{{ ca.email }}"

    - name: Client {{ ansible_default_ipv4.address }} | Fetch csr
      fetch:
        src: "{{ syslog_cert_dir }}/{{ ansible_default_ipv4.address }}.csr"
        dest: "{{ local_ca_cert_dir }}/csr/"
        flat: yes

- name: Sign clients csr's
  hosts: ca
  become: yes
  vars:
    local_ca_cert_dir: /tmp/ca_dir
    ca_dir: /opt/syslog_ca
    # Pass for CA private
    ca_privatekey_password: some_long_password
    # Dir on localhost to save CA cert in
    certs_dir: "{{ ca_dir }}/certs/"
    ca_cert: "{{ certs_dir }}/cacert.pem"
    crl_dir: "{{ ca_dir }}/crl/"
    csr_dir: "{{ ca_dir }}/csr/"
    keys_dir: "{{ ca_dir }}/private/"
    ca_key: "{{ keys_dir }}/cakey.pem"
    # In case you need to have CA certificate locally
    fetch_ca_cert: true

  tasks:
    - name: Copy csrs from Ansible to CA host
      copy:
        src: "{{ local_ca_cert_dir }}/csr/"
        dest: "{{ csr_dir }}/"

    - name: Find csrs
      command:
        cmd: "ls {{ ca_dir }}/csr/"
      register: csr_dir_listing
      changed_when: false

    - name: Sign csrs
      openssl_certificate:
        path: "{{ certs_dir }}/{{ item }}.crt"
        provider: ownca
        ownca_path: "{{ ca_cert }}"
        ownca_privatekey_path: "{{ ca_key }}"
        ownca_privatekey_passphrase: "{{ ca_privatekey_password }}"
        csr_path: "{{ csr_dir }}/{{ item }}"
        mode: 0666
        owner: root
      with_items: "{{ csr_dir_listing.stdout_lines }}"

    - name: Fetch certs
      fetch:
        src: "{{ certs_dir }}/{{ item }}.crt"
        dest: "{{ local_ca_cert_dir }}/certs/{{ item }}.crt"
        flat: yes
      with_items: "{{ csr_dir_listing.stdout_lines }}"

- name: Distribute certs
  hosts: [syslog_server, syslog_client]
  vars:
    syslog_dir: /etc/syslog-ng
    syslog_cert_dir: "{{ syslog_dir }}/cert.d/"
    local_ca_cert_dir: /tmp/ca_dir
  become: yes
  tasks:
    - name: Deliver crt
      copy:
        src: "{{ local_ca_cert_dir }}/certs/{{ ansible_default_ipv4.address }}.csr.crt"
        dest: "{{ syslog_cert_dir }}/{{ ansible_default_ipv4.address }}.pem"

- name: Ensure syslog servers and clients
  hosts: [syslog_server, syslog_client]

  vars:
    ca_dir: /opt/syslog_ca

  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      changed_when: false
      when: ansible_os_family == 'Debian'

  roles:
    - role: syslog

  post_tasks:
    - name: Ensure target configurations are correct
      command: syslog-ng --syntax-only
      changed_when: false
